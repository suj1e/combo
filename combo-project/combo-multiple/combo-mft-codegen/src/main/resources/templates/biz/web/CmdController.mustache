package {{pkg}};

import org.flooc.combo.webmvc.WebMvcResData;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.beans.factory.annotation.Autowired;
import {{group}}.application.{{pkgPrefix}}.service.{{upperPrefix}}CmdService;
import {{group}}.web.{{pkgPrefix}}.mapper.{{upperPrefix}}RequestMapper;
import {{group}}.web.{{pkgPrefix}}.request.{{upperPrefix}}CreateRequest;
import {{group}}.web.{{pkgPrefix}}.request.{{upperPrefix}}UpdateRequest;

/**
 * {{title}}-写API
 *
 * @author sujie
 * @since 1.0.0
 */
@RestController
@RequestMapping("/v1/{{prefix}}/cmd/")
public class {{cls}} {

  @Autowired
	private {{upperPrefix}}CmdService {{prefix}}CmdService;
  @Autowired
	private {{upperPrefix}}RequestMapper {{prefix}}RequestMapper;

  /**
   * 新增{{title}}
   *
   * @param request 新增{{title}}请求模型
   * @return 新增的{{title}}主键
   */
	@PostMapping("create")
	public WebMvcResData<String> create(@RequestBody @Validated {{upperPrefix}}CreateRequest request) {
		String id = {{prefix}}CmdService.create({{prefix}}RequestMapper.request2Cmd(request));
		return WebMvcResData.success(id);
	}

  
  /**
   * 修改{{title}}
   *
   * @param request 修改{{title}}请求模型
   * @return 修改成功响应
   */ 
	@PostMapping("update")
	public WebMvcResData<Void> update(@RequestBody @Validated {{upperPrefix}}UpdateRequest request) {
		{{prefix}}CmdService.update({{prefix}}RequestMapper.request2Cmd(request));
		return WebMvcResData.success();
	}

  /**
   * 删除{{title}}
   *
   * @param id 待删除的{{title}}主键
   * @return 删除成功响应
   */ 
	@PostMapping("delete")
	public WebMvcResData<Void> delete(@RequestParam("id") String id) {
		{{prefix}}CmdService.delete(id);
		return WebMvcResData.success();
	}

  /**
   * 使{{title}}生效
   *
   * @param id 待生效的{{title}}主键
   * @return 生效成功响应
   */
	@PostMapping("valid")
	public WebMvcResData<Void> valid(@RequestParam("id") String id) {
		{{prefix}}CmdService.valid(id);
		return WebMvcResData.success();
	}

  /**
   * 使{{title}}失效
   *
   * @param id 待失效的{{title}}主键
   * @return 失效成功响应
   */ 
	@PostMapping("invalid")
	public WebMvcResData<Void> invalid(@RequestParam("id") String id) {
		{{prefix}}CmdService.invalid(id);
		return WebMvcResData.success();
	}

}